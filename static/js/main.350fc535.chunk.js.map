{"version":3,"sources":["components/Header.js","components/Navigation.js","components/Post.js","components/List.js","components/Posts.js","components/SinglePost.js","components/Form.js","components/Edit.js","components/Router.js","App.js","index.js"],"names":["Header","className","to","Navigation","Post","removePost","info","id","title","onClick","Swal","fire","position","icon","showConfirmButton","timer","confirmDelete","type","List","posts","scope","length","Object","keys","map","post","Posts","SinglePost","body","userId","mostrarPost","Form","props","titleRef","useRef","entryRef","createPost","e","a","preventDefault","current","value","onSubmit","ref","Edit","tituloRef","entradaRef","editarPost","editPost","params","defaultValue","cargarFormulario","Router","useState","setPosts","useEffect","getPosts","axios","get","then","res","data","delete","status","resultado","filter","error","Error","postId","nuevoPost","assign","postUpdated","put","postEdit","findIndex","basename","process","exact","path","render","idPost","location","pathname","replace","filtro","Number","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.350fc535.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = () => {\n  return (\n    <header className=\"col-12 col-md-8 mt-2\">\n      <Link to={\"/\"}>\n        <h1 className=\"text-center \">React blog</h1>\n      </Link>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Navigation = () => {\n  return (\n    <nav className=\"col-12 col-md-8\">\n      <Link to={\"/\"}>All posts</Link>\n      <Link to={\"/crear\"}>New post</Link>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import React from \"react\";\nimport Swal from \"sweetalert2\";\nimport { Link } from \"react-router-dom\";\nimport \"./../index.css\";\n\nconst Post = ({ removePost, info }) => {\n  const confirmDelete = (id) => {\n    removePost(id);\n\n    Swal.fire({\n      position: \"top-end\",\n      icon: \"success\",\n      title: \"Deleted!\",\n      showConfirmButton: false,\n      timer: 1000,\n    });\n  };\n\n  const { id, title } = info;\n\n  return (\n    <tr>\n      <td> {id} </td>\n      <td> {title} </td>\n      <td>\n        <Link to={`/post/${id}`} className=\"btn btn-primary ver\">\n          Show\n        </Link>\n        <Link to={`/edit/${id}`} className=\"btn btn-warning ver\">\n          Edit\n        </Link>\n        <button\n          onClick={() => confirmDelete(id)}\n          type=\"button\"\n          className=\"btn btn-danger\"\n        >\n          Delete\n        </button>\n      </td>\n    </tr>\n  );\n};\n\nexport default Post;\n","import React from \"react\";\nimport Post from \"./Post\";\n\nconst List = ({ posts, removePost }) => {\n  const showPosts = () => {\n    if (posts.length === 0) return null;\n\n    return (\n      <>\n        {Object.keys(posts).map((post) => (\n          <Post key={post} info={posts[post]} removePost={removePost} />\n        ))}\n      </>\n    );\n  };\n\n  return (\n    <div>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th scope=\"col\"> ID </th>\n            <th scope=\"col\"> Title </th>\n            <th scope=\"col\"> Actions </th>\n          </tr>\n        </thead>\n\n        <tbody>{showPosts()}</tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default List;\n","import React from \"react\";\nimport List from \"./List\";\n\nconst Posts = ({ posts, removePost }) => {\n  return (\n    <div className=\"col-12 col-md-8\">\n      <List posts={posts} removePost={removePost} />\n    </div>\n  );\n};\n\nexport default Posts;\n","import React from \"react\";\n\nconst SinglePost = ({ post }) => {\n  const mostrarPost = (post) => {\n    if (!post) return null;\n    const { title, body, userId } = post;\n\n    return (\n      <>\n        <h1> {title} </h1>\n        <p>Author: {userId} </p>\n        <p> {body} </p>\n      </>\n    );\n  };\n\n  return <div className=\"col-12 col-md-8\">{mostrarPost(post)}</div>;\n};\n\nexport default SinglePost;\n","import React, { useRef } from \"react\";\nimport Swal from \"sweetalert2\";\n\nconst Form = (props) => {\n  const titleRef = useRef(null);\n  const entryRef = useRef(null);\n\n  const createPost = async (e) => {\n    e.preventDefault();\n    //create refs\n    const post = {\n      title: titleRef.current.value,\n      body: entryRef.current.value,\n      userId: 1,\n    };\n    // form validation\n    if (!titleRef.current.value || !entryRef.current.value) {\n      Swal.fire({\n        position: \"center\",\n        icon: \"error\",\n        title: \"Form is empty!\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    } else {\n      props.createPost(post);\n    }\n  };\n\n  return (\n    <form onSubmit={createPost} className=\"col-8\">\n      <legend className=\"text-center\">Create a new post</legend>\n      <div className=\"form-group\">\n        <label>Title</label>\n        <input ref={titleRef} type=\"text\" className=\"form-control\" />\n      </div>\n      <div className=\"form-group\">\n        <label>Content</label>\n        <textarea\n          ref={entryRef}\n          type=\"text\"\n          className=\"form-control\"\n        ></textarea>\n        <button type=\"submit\" className=\"btn btn-primary mt-2\">\n          Create\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default Form;\n","import React, { useRef } from \"react\";\n\nconst Edit = (props) => {\n  const tituloRef = useRef(null);\n  const entradaRef = useRef(null);\n\n  const editarPost = (e) => {\n    e.preventDefault();\n    //crear refs\n    const post = {\n      title: tituloRef.current.value,\n      body: entradaRef.current.value,\n      userId: 1,\n      id: props.post.id,\n    };\n    // enviar por props\n    props.editPost(post);\n  };\n\n  const cargarFormulario = (params) => {\n    if (!props.post) return null;\n\n    const { title, body } = props.post;\n    return (\n      <form onSubmit={editarPost} className=\"col-8\">\n        <legend className=\"text-center\">Edit post</legend>\n        <div className=\"form-group\">\n          <label>Title</label>\n          <input\n            ref={tituloRef}\n            type=\"text\"\n            className=\"form-control\"\n            defaultValue={title}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>Content</label>\n          <textarea\n            ref={entradaRef}\n            type=\"text\"\n            className=\"form-control\"\n            defaultValue={body}\n          />\n          <button type=\"submit\" className=\"btn btn-primary mt-2\">\n            Save changes\n          </button>\n        </div>\n      </form>\n    );\n  };\n\n  return <>{cargarFormulario()}</>;\n};\n\nexport default Edit;\n","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Header from \"./Header\";\nimport Navigation from \"./Navigation\";\nimport Posts from \"./Posts\";\nimport SinglePost from \"./SinglePost\";\nimport Form from \"./Form\";\nimport Swal from \"sweetalert2\";\nimport Edit from \"./Edit\";\n\nconst Router = (props) => {\n  const [posts, setPosts] = useState({ posts: [] });\n\n  useEffect(() => {\n    getPosts();\n  }, []);\n\n  const getPosts = () => {\n    axios.get(\"https://jsonplaceholder.typicode.com/posts\").then((res) => {\n      setPosts(res.data);\n    });\n  };\n\n  const removePost = (id) => {\n    try {\n      axios\n        .delete(`https://jsonplaceholder.typicode.com/posts/${id}`)\n        .then((res) => {\n          if (res.status === 200) {\n            const estado = [...posts];\n\n            let resultado = estado.filter((value) => value.id !== id);\n            setPosts(resultado);\n          }\n        });\n    } catch (error) {\n      throw new Error(\"Error\");\n    }\n  };\n\n  const createPost = (post) => {\n    try {\n      axios\n        .post(`https://jsonplaceholder.typicode.com/posts`, { post })\n        .then((res) => {\n          if (res.status === 201) {\n            Swal.fire({\n              position: \"top-end\",\n              icon: \"success\",\n              title: \"Post created!\",\n              showConfirmButton: false,\n              timer: 1500,\n            });\n\n            let postId = { id: res.data.id };\n            const nuevoPost = Object.assign({}, res.data.post, postId);\n\n            setPosts([...posts, nuevoPost]);\n          }\n        });\n    } catch (error) {\n      throw new Error(\"Error en API\");\n    }\n  };\n\n  const editPost = (postUpdated) => {\n    const { id } = postUpdated;\n\n    try {\n      axios\n        .put(`https://jsonplaceholder.typicode.com/posts/${id}`, {\n          postUpdated,\n        })\n        .then((res) => {\n          if (res.status === 200) {\n            let postId = res.data.id;\n\n            const postEdit = posts.findIndex((post) => postId === post.id);\n\n            posts[postEdit] = postUpdated;\n\n            setPosts(posts);\n\n            Swal.fire({\n              position: \"top-end\",\n              icon: \"success\",\n              title: \"Post updated!\",\n              showConfirmButton: false,\n              timer: 1500,\n            });\n          }\n        });\n    } catch (error) {\n      throw new Error(\"Error en api\");\n    }\n  };\n\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <div className=\"container\">\n        <div className=\"row justify-content-center\">\n          <Header />\n          <Navigation />\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={() => <Posts posts={posts} removePost={removePost} />}\n            />\n\n            <Route\n              exact\n              path=\"/post/:postId\"\n              render={(props) => {\n                let idPost = props.location.pathname.replace(\"/post/\", \"\");\n\n                let filtro = posts.filter((post) => post.id === Number(idPost));\n\n                return <SinglePost post={filtro[0]} />;\n              }}\n            />\n\n            <Route\n              exact\n              path=\"/crear\"\n              render={() => <Form createPost={createPost} />}\n            />\n\n            <Route\n              exact\n              path=\"/edit/:postId\"\n              render={(props) => {\n                let idPost = props.location.pathname.replace(\"/edit/\", \"\");\n\n                let filter = posts.filter((post) => post.id === Number(idPost));\n\n                return <Edit post={filter[0]} editPost={editPost} />;\n              }}\n            />\n          </Switch>\n        </div>\n      </div>\n    </BrowserRouter>\n  );\n};\n\nexport default Router;\n","import React from \"react\";\nimport Router from \"./components/Router\";\n\nconst App = () => <Router />;\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}